n=7*6*5*4*3*2*1
r=3*2*1
c=n/r*(n-r)
n/c
library(ape)
aln<-read.dna("ebov_2014_early.fasta",format="fasta")
dates<-gsub(".+[_]","",rownames(aln))
date_temp<-strsplit(dates,"/")
decimal_dates <- vector()
for(i in 1:length(date_temp)){
date_temp[[i]]<-as.numeric(date_temp[[i]])
if(is.na(date_temp[[i]][2] )){
date_temp[[i]][2]=6
}
if(is.na(date_temp[[i]][3])){
date_temp[[i]][3]=15
}
decimal_dates[i]<-date_temp[[i]][1]+date_temp[[i]][2]/13+date_temp[[i]][3]/366
}
paste0(rownames(aln),"@",decimal_dates)
rownames(aln)<-paste0(rownames(aln),"@",decimal_dates)
write.dna(aln,"ebola_2014.fasta",format="fasta")
setwd("~/Documents/GitHub/ebola-mutation-rates-study/code")
setwd("~/Documents/GitHub/ebola-mutation-rates-study/code")
library(ape)
make_xml <- function(dna_data, template, outname, randomise.dates = F, ultra = F){
dna_data <- as.character(dna_data)
if(ultra){
taxon_block <- paste0(paste0('<taxon id=\"', rownames(dna_data), '\">\n</taxon>'), collapse = '\n')
}else{
dates <- gsub('.+@', '', rownames(dna_data))
if(randomise.dates) dates <- sample(dates)
taxon_block <- paste0(paste0('<taxon id=\"', rownames(dna_data), '\">\n<date value=\"', dates, '\" direction=\"forwards\" units=\"years\"/>\n</taxon>'),
collapse = '\n')
}
aln_block <- paste0(sapply(1:nrow(dna_data), function(x) paste0('<sequence>\n<taxon idref=\"', rownames(dna_data)[x], '\"/>\n',
paste0(dna_data[x, ], collapse = ''), '\n</sequence>')), collapse = '')
replace_text <- c(TAXON_BLOCK=taxon_block, ALN_BLOCK=aln_block, OUT_FILE=outname)
for(tex in 1:length(replace_text)){
template <- gsub(names(replace_text)[tex], replace_text[tex], template)
}
writeLines(template, con = paste0(outname, '.xml'))
}
template_strict_dates <- readLines('GSS_template_strict_dates.xml')
template_ucld_dates <- readLines('GSS_template_ucld_dates.xml')
template_strict_ultra <- readLines('GSS_template_strict_ultra.xml')
template_ucld_ultra <- readLines('GSS_template_ucld_ultra.xml')
#make_xml(seq_data, template_strict_dates, output)
dir("../ebola_fasta_files/")
input_files<-paste0("../ebola_fasta_files/","2014.5-2015_large2014_max200_pruned.fasta")
input_data<-read.dna(input_files,format="fasta")
source("make_xmls_GSS.R")
source("make_xmls_GSS.R")
input_files
library(ape)
input_data<-read.dna(input_files,format="fasta")
input_data<-read.dna(input_files,format="fasta")
setwd("~/Documents/GitHub/ebola-mutation-rates-study/code")
library(ape)
make_xml <- function(dna_data, template, outname, randomise.dates = F, ultra = F){
dna_data <- as.character(dna_data)
if(ultra){
taxon_block <- paste0(paste0('<taxon id=\"', rownames(dna_data), '\">\n</taxon>'), collapse = '\n')
}else{
dates <- gsub('.+@', '', rownames(dna_data))
if(randomise.dates) dates <- sample(dates)
taxon_block <- paste0(paste0('<taxon id=\"', rownames(dna_data), '\">\n<date value=\"', dates, '\" direction=\"forwards\" units=\"years\"/>\n</taxon>'),
collapse = '\n')
}
aln_block <- paste0(sapply(1:nrow(dna_data), function(x) paste0('<sequence>\n<taxon idref=\"', rownames(dna_data)[x], '\"/>\n',
paste0(dna_data[x, ], collapse = ''), '\n</sequence>')), collapse = '')
replace_text <- c(TAXON_BLOCK=taxon_block, ALN_BLOCK=aln_block, OUT_FILE=outname)
for(tex in 1:length(replace_text)){
template <- gsub(names(replace_text)[tex], replace_text[tex], template)
}
writeLines(template, con = paste0(outname, '.xml'))
}
template_strict_dates <- readLines('GSS_template_strict_dates.xml')
template_ucld_dates <- readLines('GSS_template_ucld_dates.xml')
template_strict_ultra <- readLines('GSS_template_strict_ultra.xml')
template_ucld_ultra <- readLines('GSS_template_ucld_ultra.xml')
#make_xml(seq_data, template_strict_dates, output)
dir("../ebola_fasta_files/")
input_files<-paste0("../ebola_fasta_files/","2014.5-2015_large2014_max200_pruned.fasta")
input_data<-read.dna(input_files,format="fasta")
source("make_xmls_GSS.R")
input_files
library(ape)
input_data<-read.dna(input_files,format="fasta")
make_xml(input_data,template_strict_dates,'2014.5-2015_large2014_max200_pruned_sc_het')
make_xml(input_data,template_strict_ultra,'2014.5-2015_large2014_max200_pruned_sc_iso',ultra=T)
make_xml(input_data,template_ucld_dates,'2014.5-2015_large2014_max200_pruned_ucld_het')
make_xml(input_data,template_ucld_ultra,'2014.5-2015_large2014_max200_pruned_ucld_iso',ultra=T)
